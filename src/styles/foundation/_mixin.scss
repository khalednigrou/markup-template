/// @param {number|string} $size [md] - size in pixel
/// @param {number} $width [max] - max|min
///
/// @example scss - Basic Usage
///    // Example
///    .el {
///        color: red;
///        @include mq(){
///            color: blue;
///        }
///    }
///
///    // Output
///    .el { color: red; }
///    @media (max-width: 1020px) {
///        .el { color: blue; }
///    }
///
/// @example scss - Advance Usage
///    // Example
///    .el {
///        color: red;
///        @include mq(500, min){
///            color: blue;
///        }
///    }
///
///    // Output
///    .el { color: red; }
///    @media (max-width: 500px) {
///        .el { color: blue; }
///    }
///

@mixin mq($size: md, $width: max) {
  $result: 0;
  
  @if type-of($size) == number {
    $result: $size;
  } @else {
    @each $key, $value in $breakpoints {
      @if $key == $size {
        $result: $value;
      }
    }
  }
  
  @if $width == min {
    $result: $result + 1;
  }

  @media (#{$width}-width: #{$result}px) {
    @content;
  }
}
